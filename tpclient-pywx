
import sys

# wx.Python imports
import wx
import extra.fixdc

# Python Imports
from math import *
from copy import *

import string
import pprint
import thread

import sys
sys.path.append("..")

from netlib import Connection

from utils import *
from config import *

from windows.control import MainControl

class Splash(wx.SplashScreen):
	def __init__(self, application):
		image = wx.Image("graphics/splash.png").ConvertToBitmap()
		wx.SplashScreen.__init__(self, image, wx.SPLASH_CENTRE_ON_SCREEN | wx.SPLASH_TIMEOUT, 3000, None, -1)

		self.application = application
		
		self.Bind(wx.EVT_CLOSE, self.OnClose)

	def OnClose(self, evt):
		self.Hide()
		self.application.windows.connect.Show(True)

class AppTP(wx.App):
	def __init__(self):
		wx.App.__init__(self)

		try:
			print "AppTp.OnInit.AllImageHandlers"
			wx.InitAllImageHandlers()
			
			self.config = self.ConfigLoad()
			
			print "AppTp.OnInit.cache"
			self.cache = {}

			print "AppTp.OnInit.windows"
			self.windows = MainControl(self)

			print "AppTp.OnInit.connection"
			self.connection = Connection()
		
			splash = Splash(self)
			splash.Show()

		except:
			do_traceback()

	def ConfigLoad(self):
		print "AppTp.ConfigLoad"

		try:
			import sys
			sys.path.append("var")
			import config as config
			self.config = config
		except ImportError:
			config = Blank()
			config.splash = True
			config.tips = True
			config.autoconnect = False

			config.host = "127.0.0.1"
			config.username = ""
			config.password = ""

		return config

	def ConfigSave(self):
		print "AppTp.ConfigSave"

		data = """\
# Show the splash screen on startup
splash = %(splash)s
 
# Show the "tips" on startup
tips = %(tips)s
 
# On startup connect to the default server
autoconnect = %(autoconnect)s
 
# Autoconnect information
host = "%(host)s"
username = "%(username)s"
password = "%(password)s"
""" % self.config.__dict__
		open(os.path.join("var", "config"), "w+").write(data)

	def Exit(self):
		print "AppTp.exit"
		sys.exit(1)

if __name__ == '__main__':
	try:
		app = AppTP()
		app.MainLoop()
	finally:
		do_traceback()
		sys.stdin.read(1)
	
